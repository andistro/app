#!/data/data/com.termux/files/usr/bin/bash
#rm -rf * && rm -rf "$PREFIX/bin/andistro_files/" && rm -rf "$PREFIX/bin/andistro"
extralink="https://raw.githubusercontent.com/andistro/app/main" # Para a versão main
if [ ! -d "$PREFIX/bin/andistro_files/" ];then
	mkdir -p "$PREFIX/bin/andistro_files/"
fi

system_icu_locale_code=$(getprop persist.sys.locale)

apt update > /dev/null 2>&1 && apt upgrade -y

if [ ! -d "$HOME/storage" ];then
    termux-setup-storage
fi
# Log de erros
if [ ! -d "$HOME/storage/shared/termux/andistro/logs" ];then
    mkdir "$HOME/storage/shared/termux/"
    mkdir "$HOME/storage/shared/termux/andistro"
    mkdir "$HOME/storage/shared/termux/andistro/logs"
fi

clear

# ==============================================================================================
# GLOBAL
# ==============================================================================================
# Variável com o link do script no GitHub
# Função para atualizar a barra de progresso
# update_progress() precisa ser definido antes de ser usado
update_progress() {
    current_step=$1
    total_steps=$2

    percent=$((current_step * 100 / total_steps))
    bar_length=30
    filled_length=$((percent * bar_length / 100))
    empty_length=$((bar_length - filled_length))

    filled_bar=$(printf "%${filled_length}s" | tr " " "=")
    empty_bar=$(printf "%${empty_length}s" | tr " " " ")

    printf "\r[%s%s] %3d%%" "$filled_bar" "$empty_bar" "$percent"
}


total_steps=14  # Número total de etapas que você quer monitorar
current_step=0

{
    #1 Verifica se o termux-exec está instalado
    if ! dpkg -l | grep -qw termux-exec; then
        apt install termux-exec -y
    fi
    ((current_step++))
    update_progress "$current_step" "$total_steps"; sleep 0.1

    #2 Verifica se o proot está instalado
    if ! dpkg -l | grep -qw proot; then
        apt install proot -y
    fi
    ((current_step++))
    update_progress "$current_step" "$total_steps"; sleep 0.1

    #3 Verifica se o wget está instalado
    if ! dpkg -l | grep -qw wget; then
        apt install wget -y
    fi
    ((current_step++))
    update_progress "$current_step" "$total_steps"; sleep 0.1

    #4 Verifica se o dialog está instalado
    if ! dpkg -l | grep -qw dialog; then
        apt install dialog -y
    fi
    ((current_step++))
    update_progress "$current_step" "$total_steps"; sleep 0.1

    #5 Verifica se o tar está instalado
    if ! dpkg -l | grep -qw tar; then
        apt install tar -y
    fi
    ((current_step++))
    update_progress "$current_step" "$total_steps"; sleep 0.1

    #6 Verifica se o curl está instalado
    if ! dpkg -l | grep -qw curl; then
        apt install curl -y
    fi
    ((current_step++))
    update_progress "$current_step" "$total_steps"; sleep 0.1

    #7 Verifica e baixa global_var_fun.sh
    if [ ! -f "$PREFIX/bin/andistro_files/global_var_fun.sh" ]; then
        curl -s -o "$PREFIX/bin/andistro_files/global_var_fun.sh" "${extralink}/config/global_var_fun.sh"
    fi
    ((current_step++))
    update_progress "$current_step" "$total_steps"; sleep 0.1

    #8 Verifica e baixa l10n_${locale}.sh
    if [ ! -f "$PREFIX/bin/andistro_files/l10n_${system_icu_locale_code}.sh" ]; then
        curl -s -o "$PREFIX/bin/andistro_files/l10n_${system_icu_locale_code}.sh" "${extralink}/config/locale/l10n_${system_icu_locale_code}.sh"
    fi
    ((current_step++))
    update_progress "$current_step" "$total_steps"; sleep 0.1

    #9 Verifica se o andistro está em $HOME
    if [ -f "$HOME/andistro" ]; then
        mv "$HOME/andistro" "$PREFIX/bin/andistro"
        rm -rf "$HOME/andistro"
    fi
    chmod +x "$PREFIX/bin/andistro"
    ((current_step++))
    update_progress "$current_step" "$total_steps"; sleep 0.1

    #10 Verifica se o unzip está instalado
    if ! dpkg -l | grep -qw unzip; then
        apt install unzip -y
    fi
    ((current_step++))
    update_progress "$current_step" "$total_steps"; sleep 0.1

    #11 Verifica se o xz-utils está instalado
    if ! dpkg -l | grep -qw xz-utils; then
        apt install xz-utils -y
    fi
    ((current_step++))
    update_progress "$current_step" "$total_steps"; sleep 0.1

    #12 Verifica se o debootstrap está instalado
    if ! dpkg -l | grep -qw debootstrap; then
        apt install debootstrap -y
    fi
    ((current_step++))
    update_progress "$current_step" "$total_steps"; sleep 0.1

    #13 Verifica se o curl está instalado
    if ! dpkg -l | grep -qw dbus; then
        apt install dbus -y
    fi
    ((current_step++))
    update_progress "$current_step" "$total_steps"; sleep 0.1

    #14 Verifica se o curl está instalado
    if ! dpkg -l | grep -qw pv; then
        apt install pv -y
    fi
    ((current_step++))
    update_progress "$current_step" "$total_steps"; sleep 0.1

    echo  # pular linha no fim
}

clear

chmod +x "$PREFIX/bin/andistro_files/global_var_fun.sh"
source "$PREFIX/bin/andistro_files/global_var_fun.sh"
clear
#=============================================================================================
# COMANDOS
#=============================================================================================

# Verifica os argumentos passados ao script
if [ -z "$1" ]; then
    # Caso nenhum argumento seja passado, exibe a mensagem de instrução
    echo "$distro_desc_line_1"
    echo ""
    echo "$distro_desc_line_2"
    echo "$distro_desc_line_3"
    echo " "
    echo "$distro_desc_line_4"
    echo "$distro_desc_line_5"
    echo " "
    echo "$distro_desc_line_6"
    echo "$distro_desc_line_7"
    echo " "
    echo "$distro_desc_line_8"
    echo "$distro_desc_line_9"
    echo "$distro_desc_line_10"
    echo "$distro_desc_line_11"
    echo "$distro_desc_line_12"
    echo " "
    echo "$distro_desc_line_13"
    echo "   debian"
    echo "   ubuntu"
exit 0

fi

case "$1" in
    ${distro_update})
        if [ -z "$2" ]; then
            apt update > /dev/null 2>&1 && apt upgrade -y > /dev/null 2>&1
            update_progress() {
                local current_step=$1
                local total_steps=$2
                local percent=$((current_step * 100 / total_steps))
                local bar_length=30
                local filled_length=$((percent * bar_length / 100))
                local empty_length=$((bar_length - filled_length))

                local filled_bar
                local empty_bar
                filled_bar=$(printf "%${filled_length}s" | tr " " "=")
                empty_bar=$(printf "%${empty_length}s" | tr " " " ")

                # AQUI ESTÁ O PULO DO GATO: força a saída para o terminal
                printf "\r[%s%s] %3d%%" "$filled_bar" "$empty_bar" "$percent" > /dev/tty
            }
            total_steps=5  # Número total de etapas que você quer monitorar
            current_step=0
            {
                apt update -qq -y > /dev/null 2>&1
                ((current_step++))
                update_progress "$current_step" "$total_steps" "Atualizando repositórios"
                sleep 0.5

                apt upgrade -y > /dev/null 2>&1
                ((current_step++))
                update_progress "$current_step" "$total_steps" "Atualizando repositórios"
                sleep 0.5

                #1 
                curl -s -o "$HOME/andistro.check" "${extralink}/andistro" 2>&1

                if [ -f "$PREFIX/bin/andistro" ] && [ -f "$HOME/andistro.check" ]; then
                    if ! cmp -s "$PREFIX/bin/andistro" "$HOME/andistro.check"; then
                        rm "$PREFIX/bin/andistro"
                        mv "$HOME/andistro.check" "$PREFIX/bin/andistro"
                        chmod +x "$PREFIX/bin/andistro"
                    else
                        rm "$HOME/andistro.check"
                    fi
                fi
                ((current_step++))
                update_progress "$current_step" "$total_steps"; sleep 0.1

                #2 
                curl -s -o "$PREFIX/bin/andistro_files/global_var_fun.check" "${extralink}/config/global_var_fun.sh" 2>&1

                if [ -f "$PREFIX/bin/andistro_files/global_var_fun.sh" ] && [ -f "$PREFIX/bin/andistro_files/global_var_fun.check" ]; then
                    if ! cmp -s "$PREFIX/bin/andistro_files/global_var_fun.sh" "$PREFIX/bin/andistro_files/global_var_fun.check"; then
                        rm "$PREFIX/bin/andistro_files/global_var_fun.sh"
                        mv "$PREFIX/bin/andistro_files/global_var_fun.check" "$PREFIX/bin/andistro_files/global_var_fun.sh"
                        chmod +x "$PREFIX/bin/andistro_files/global_var_fun.sh"
                    else
                        rm "$PREFIX/bin/andistro_files/global_var_fun.check"
                    fi
                fi
                ((current_step++))
                update_progress "$current_step" "$total_steps"; sleep 0.1

                #3 
                curl -s -o "$PREFIX/bin/andistro_files/l10n_${system_icu_locale_code}.check" "${extralink}/config/locale/l10n_${system_icu_locale_code}.sh" 2>&1
                
                if [ -f "$PREFIX/bin/andistro_files/l10n_${system_icu_locale_code}.sh" ] && [ -f "$PREFIX/bin/andistro_files/l10n_${system_icu_locale_code}.check" ]; then
                    if ! cmp -s "${extralink}/config/locale/l10n_${system_icu_locale_code}.sh" "${extralink}/config/locale/l10n_${system_icu_locale_code}.check"; then
                        rm "${extralink}/config/locale/l10n_${system_icu_locale_code}.sh"
                        mv "${extralink}/config/locale/l10n_${system_icu_locale_code}.check" "${extralink}/config/locale/l10n_${system_icu_locale_code}.sh"
                        chmod +x "${extralink}/config/locale/l10n_${system_icu_locale_code}.sh"
                    else
                        rm "${extralink}/config/locale/l10n_${system_icu_locale_code}.check"
                    fi
                fi
                ((current_step++))
                update_progress "$current_step" "$total_steps"; sleep 0.1

                echo  # pular linha no fim
            }

            source "$PREFIX/bin/andistro_files/global_var_fun.sh"
            andistro
            exit 1

        fi
        ;;

    ${distro_install})
        if [ -z "$2" ]; then
            echo "$distro_desc_line_1"
            echo ""
            echo "$distro_desc_line_2"
            echo "$distro_desc_line_3"
            echo " "
            echo "$distro_desc_line_8"
            echo "$distro_desc_line_10"
            echo " "
            echo "$distro_desc_line_13"
            echo "   debian"
            echo "   ubuntu"
            exit 1
        fi

        if [ "$2" == "debian" ]; then
            echo "$distro_wait"
            andistro ${distro_update} 2>&1
            andistro alerta
            show_progress_dialog "wget" "${label_progress}" 1 -O "$HOME/start-distro.sh" "${extralink}/distros/debian.sh"
            clear

        elif [ "$2" == "ubuntu" ]; then
            echo "$distro_wait"
            andistro ${distro_update} 2>&1
            andistro alerta
            show_progress_dialog "wget" "${label_progress}" 1 -O "$HOME/start-distro.sh" "${extralink}/distros/ubuntu.sh"
            clear

        else
            echo "Distribuição não reconhecida: $2"
            exit 1
        fi
        chmod +x $HOME/start-distro.sh
        bash $HOME/start-distro.sh
        rm -rf $HOME/start-distro.sh
        ;;
    ${distro_del})
        if [ -z "$2" ]; then
            echo "$distro_desc_line_1"
            echo ""
            echo "$distro_desc_line_4"
            echo "$distro_desc_line_5"
            echo " "
            echo "$distro_desc_line_8"
            echo "$distro_desc_line_11"
            echo " "
            echo "$distro_desc_line_13"
            echo "   debian"
            echo "   ubuntu"
            exit 1
        fi

        if [ "$2" == "debian" ]; then
            echo "$distro_wait"
            andistro ${distro_update} 2>&1
            rm -rf $HOME/debian-stable
            rm -rf $HOME/debian-binds
            rm -rf $HOME/start-debian.sh
            rm -rf $HOME/start-distro.sh
            rm -rf $HOME/l10n*.sh
            rm -rf $HOME/global_var_fun.sh
            rm -rf $HOME/storage
            rm -rf $HOME/debian-stable
            rm -rf $HOME/debian-bookworm
            rm -rf $HOME/debian-bullseye
            rm -rf $PREFIX/bin/start-debian
            rm -rf /data/data/com.termux/files/usr/var/run/dbus/pid 
            rm -rf system_bus_socket
            echo "Desinstalação concluída!"
            clear

        elif [ "$2" == "ubuntu" ]; then
            echo "$distro_wait"
            andistro ${distro_update} 2>&1
            rm -rf $HOME/ubuntu-noble
            rm -rf $HOME/ubuntu-noble.tar.xz
            rm -rf $HOME/ubuntu-fs
            rm -rf $HOME/ubuntu-binds
            rm -rf $HOME/start-ubuntu.sh
            rm -rf $PREFIX/bin/andistro_files/start-ubuntu
            rm -rf $HOME/start-distro.sh
            rm -rf $HOME/l10n*.sh
            rm -rf $HOME/global_var_fun.sh
            rm -rf $PREFIX/bin/start-ubuntu
            rm -rf /data/data/com.termux/files/usr/var/run/dbus/pid 
            rm -rf system_bus_socket
            echo "Desinstalação concluída!"
            clear

        else
            echo "Distribuição não reconhecida: $2"
            exit 1
        fi
        ;;
    ${distro_start})
        if [ -z "$2" ]; then
            echo "$distro_desc_line_1"
            echo ""
            echo "$distro_desc_line_6"
            echo "$distro_desc_line_7"
            echo " "
            echo "$distro_desc_line_8"
            echo "$distro_desc_line_12"
            echo " "
            echo "$distro_desc_line_13"
            echo "   debian"
            echo "   ubuntu"
            exit 1
        fi

        if [ "$2" == "debian" ]; then
            echo "$distro_wait"
            start-debian
            clear

        elif [ "$2" == "ubuntu" ]; then
            echo "$distro_wait"
            start-ubuntu
            clear

        else
            echo "Distribuição não reconhecida: $2"
            exit 1
        fi
        ;;

        alerta)
            {
                for i in {1..50}; do
                    sleep 0.1
                    echo $((i * 2))
                done
            } | dialog --gauge "$label_distro_alert_timezone_desc oi\n$label_distro_alert_timezone_detected $system_timezone\n\n$label_sleep_in_5s oi" 10 60 0
        ;;

    *)
        echo "$distro_command_not_found $1"
        echo ""
        echo "$distro_desc_line_1"
        echo ""
        echo "$distro_desc_line_2"
        echo "$distro_desc_line_3"
        echo " "
        echo "$distro_desc_line_4"
        echo "$distro_desc_line_5"
        echo " "
        echo "$distro_desc_line_6"
        echo "$distro_desc_line_7"
        echo " "
        echo "$distro_desc_line_8"
        echo "$distro_desc_line_9"
        echo "$distro_desc_line_10"
        echo "$distro_desc_line_11"
        echo "$distro_desc_line_12"
        echo " "
        echo "$distro_desc_line_13"
        echo "   debian"
        echo "   ubuntu"
        echo " "
        exit 1
        ;;
esac

#!/data/data/com.termux/files/usr/bin/bash
#rm -rf * && rm -rf "$PREFIX/var/lib/andistro/" && rm -rf "$PREFIX/bin/andistro"
extralink="https://raw.githubusercontent.com/andistro/app/main" # Para a versão main
timestamp=$(date +'%d%m%Y-%H%M%S')
LOGFILE="/sdcard/termux/andistro/logs/andistro_${timestamp}.txt"

# Log de erros
if [ ! -d "$HOME/storage/shared/termux/andistro/logs" ];then
    mkdir -p "$HOME/storage/shared/termux/"
    mkdir -p "$HOME/storage/shared/termux/andistro"
    mkdir -p "$HOME/storage/shared/termux/andistro/distros"
    mkdir -p "$HOME/storage/shared/termux/andistro/logs"
fi

# Cria os diretórios necessários
if [ ! -d "$PREFIX/var/lib/andistro/" ];then
	mkdir -p "$PREFIX/var/lib/andistro/"
	mkdir -p "$PREFIX/var/lib/andistro/lib/share/"
	mkdir -p "$PREFIX/var/lib/andistro/lib/share/locales/"
	mkdir -p "$PREFIX/var/lib/andistro/boot/"
fi

if [ -f "$PREFIX/var/lib/andistro/lib/share/global" ]; then
    source $PREFIX/var/lib/andistro/lib/share/global
fi

# Detecta o idioma do sistema
echo "COD_AnD00001" >> "$LOGFILE"
system_icu_locale_code=$(getprop persist.sys.locale)

echo "COD_AnD000002" >> "$LOGFILE"
if [ ! -d "$HOME/storage" ];then
    termux-setup-storage
fi

#Verifica se o andistro está em $HOME
echo "COD_AnD000003" >> "$LOGFILE"
if [ -f "$HOME/andistro" ]; then
    mv "$HOME/andistro" "$PREFIX/bin/andistro"
    rm -rf "$HOME/andistro"
    andistro -u 2>&1 | tee -a "$LOGFILE"
    andistro 2>&1 | tee -a "$LOGFILE"
fi

# Configurações do Termux
# Verifica se a configuração já foi aplicada
# Adiciona a configuração de teclas extras se não estiver presente
echo "COD_AnD000004" >> "$LOGFILE"
if ! grep -Fq "extra-keys = [['DRAWER','PASTE'],['ESC','/','-','HOME','UP','END','PGUP','KEYBOARD'],['TAB','CTRL','ALT','LEFT','DOWN','RIGHT','PGDN','ENTER']]" ~/.termux/termux.properties; then
    # Aplica os sed
    sed -i "s|^# *extra-keys = \[\['ESC','/','-','HOME','UP','END','PGUP'\], \\\\|extra-keys = [['DRAWER','PASTE'],['ESC','/','-','HOME','UP','END','PGUP','KEYBOARD'],['TAB','CTRL','ALT','LEFT','DOWN','RIGHT','PGDN','ENTER']]|" ~/.termux/termux.properties
    sed -i "s|^#[[:space:]]*\['TAB','CTRL','ALT','LEFT','DOWN','RIGHT','PGDN']]||" ~/.termux/termux.properties

    # Recarrega Termux settings
    termux-reload-settings
fi

#=============================================================================================
# COMANDOS
#=============================================================================================
if [ -z "$1" ]; then
    HEIGHT=0
    WIDTH=100
    CHOICE_HEIGHT=5
    export PORT=1

    echo "COD_AnD000007" >> "$LOGFILE"
    OPTIONS=(1 "Instalar"
            2 "Iniciar"
            3 "Atualizar"
            4 "Desinstalar"
            5 "Ver como terminal")

    echo "COD_AnD000008" >> "$LOGFILE"
    CHOICE=$(dialog --no-shadow --clear \
        --title "AnDistro" \
        --menu "Escolha uma das opções:" \
        $HEIGHT $WIDTH $CHOICE_HEIGHT \
        "${OPTIONS[@]}" \
        2>&1 >/dev/tty)

    clear
    case $CHOICE in
        1)	
            # Instalação
            echo "COD_AnD000009" >> "$LOGFILE"
            export PORT=1
            OPTIONS=(1 "Debian"
                    2 "Ubuntu"
                    3 "Ver como terminal")

            CHOICE=$(dialog --no-shadow --clear \
                --title "AnDistro" \
                --menu "Escolha uma das opções:" \
                $HEIGHT $WIDTH $CHOICE_HEIGHT \
                "${OPTIONS[@]}" \
                2>&1 >/dev/tty)
            case $CHOICE in
                1)
                    echo "COD_AnD000009-1" >> "$LOGFILE"
                    andistro  -i debian 2>&1 | tee -a "$LOGFILE"
                ;;
                2)
                    echo "COD_AnD000009-2" >> "$LOGFILE"
                    andistro -i ubuntu 2>&1 | tee -a "$LOGFILE"
                ;;
                3)
                    echo "COD_AnD000009-3" >> "$LOGFILE"
                    clear
                    andistro -i 2>&1 | tee -a "$LOGFILE"
                ;;
            esac
        ;;
        2)	
            # Iniciar
            echo "COD_AnD000010" >> "$LOGFILE"
            export PORT=1
            OPTIONS=(1 "Debian"
                    2 "Ubuntu"
                    3 "Ver como terminal")

            CHOICE=$(dialog --no-shadow --clear \
                --title "AnDistro" \
                --menu "Escolha uma das opções:" \
                $HEIGHT $WIDTH $CHOICE_HEIGHT \
                "${OPTIONS[@]}" \
                2>&1 >/dev/tty)
            case $CHOICE in
                1)
                    echo "COD_AnD000010-1" >> "$LOGFILE"
                    andistro -s debian 2>&1 | tee -a "$LOGFILE"
                ;;
                2)
                    echo "COD_AnD000010-2" >> "$LOGFILE"
                    andistro -s ubuntu 2>&1 | tee -a "$LOGFILE"
                ;;
                3)
                    echo "COD_AnD000010-3" >> "$LOGFILE"
                    clear
                    andistro -s 2>&1 | tee -a "$LOGFILE"
                ;;
            esac
        ;;

        3)
            # Atualização
            echo "COD_AnD000011" >> "$LOGFILE"
            clear
            andistro -u
        ;;

        4)
            # Desinstalação
            echo "COD_AnD000012" >> "$LOGFILE"
            export PORT=1
            OPTIONS=(1 "Debian"
                    2 "Ubuntu"
                    3 "Ver como terminal")

            CHOICE=$(dialog --no-shadow --clear \
                --title "AnDistro" \
                --menu "Escolha uma das opções:" \
                $HEIGHT $WIDTH $CHOICE_HEIGHT \
                "${OPTIONS[@]}" \
                2>&1 >/dev/tty)
            case $CHOICE in
                1)
                    echo "COD_AnD000012-1" >> "$LOGFILE"
                    andistro -d debian 2>&1 | tee -a "$LOGFILE"
                ;;
                2)
                    echo "COD_AnD000012-2" >> "$LOGFILE"
                    andistro -d ubuntu 2>&1 | tee -a "$LOGFILE"
                ;;
                3)
                    echo "COD_AnD000012-3" >> "$LOGFILE"
                    clear
                    andistro -d 2>&1 | tee -a "$LOGFILE"
                ;;
            esac
        ;;

        5)
            # Ver como terminal
            echo "COD_AnD000013" >> "$LOGFILE"
            clear
            andistro terminal 2>&1 | tee -a "$LOGFILE"
        ;;
    esac
fi



case "$1" in
    -u)
        echo -e "\n$distro_wait"
        echo "COD_AnD000000" >> "$LOGFILE"
        # Atualização, instalação e manutenção do Andistro e Termux
        update_progress() {
            current_step=$1
            total_steps=$2

            percent=$((current_step * 100 / total_steps))
            bar_length=30
            filled_length=$((percent * bar_length / 100))
            empty_length=$((bar_length - filled_length))

            filled_bar=$(printf "%${filled_length}s" | tr " " "=")
            empty_bar=$(printf "%${empty_length}s" | tr " " " ")

            printf "\r[%s%s] %3d%%" "$filled_bar" "$empty_bar" "$percent"
        }

        total_steps=25  # Número total de etapas que você quer monitorar
        current_step=0

        {
            #1 Atualiza os repositórios
            echo "COD_AnD000000-1" >> "$LOGFILE"
            pkg update > /dev/null 2>&1
            ((current_step++))
            update_progress "$current_step" "$total_steps"; sleep 0.1

            #2 Instala o bash
            echo "COD_AnD000000-2" >> "$LOGFILE"
            pkg install --option=Dpkg::Options::="--force-confold" bash -y > /dev/null 2>&1
            ((current_step++))
            update_progress "$current_step" "$total_steps"; sleep 0.1

            #3 Instala o openssl
            echo "COD_AnD000000-3" >> "$LOGFILE"
            pkg install --option=Dpkg::Options::="--force-confold" openssl -y > /dev/null 2>&1
            ((current_step++))
            update_progress "$current_step" "$total_steps"; sleep 0.1

            #4 Instala o apt
            echo "COD_AnD000000-4" >> "$LOGFILE"
            pkg install --option=Dpkg::Options::="--force-confold" apt -y > /dev/null 2>&1
            ((current_step++))
            update_progress "$current_step" "$total_steps"; sleep 0.1

            #5 Atualiza os pacotes
            echo "COD_AnD000000-5" >> "$LOGFILE"
            pkg upgrade -y > /dev/null 2>&1
            ((current_step++))
            update_progress "$current_step" "$total_steps"; sleep 0.1

            #6 Verifica se o termux-exec está instalado
            echo "COD_AnD000000-6" >> "$LOGFILE"
            if ! dpkg -l | grep -qw termux-exec; then
                pkg install termux-exec -y > /dev/null 2>&1
            fi
            ((current_step++))
            update_progress "$current_step" "$total_steps"; sleep 0.1

            #7 Verifica se o proot está instalado
            echo "COD_AnD000000-7" >> "$LOGFILE"
            if ! dpkg -l | grep -qw proot; then
                pkg install proot -y > /dev/null 2>&1
            fi
            ((current_step++))
            update_progress "$current_step" "$total_steps"; sleep 0.1

            #8 Verifica se o x11-repo está instalado
            echo "COD_AnD000000-8" >> "$LOGFILE"
            if ! dpkg -l | grep -qw x11-repo; then
                pkg install x11-repo -y > /dev/null 2>&1
            fi
            ((current_step++))
            update_progress "$current_step" "$total_steps"; sleep 0.1

            #9 Verifica se o termux-x11-nightly está instalado
            echo "COD_AnD000000-9" >> "$LOGFILE"
            if ! dpkg -l | grep -qw termux-x11-nightly; then
                pkg install termux-x11-nightly -y > /dev/null 2>&1
            fi
            ((current_step++))
            update_progress "$current_step" "$total_steps"; sleep 0.1

            #10 Verifica se o pulseaudio está instalado
            echo "COD_AnD000000-10" >> "$LOGFILE"
            if ! dpkg -l | grep -qw pulseaudio; then
                pkg install pulseaudio -y > /dev/null 2>&1
            fi
            ((current_step++))
            update_progress "$current_step" "$total_steps"; sleep 0.1

            #11 Verifica se o wget está instalado
            echo "COD_AnD000000-11" >> "$LOGFILE"
            if ! dpkg -l | grep -qw wget; then
                pkg install wget -y > /dev/null 2>&1
            fi
            ((current_step++))
            update_progress "$current_step" "$total_steps"; sleep 0.1

            #12 Verifica se o dialog está instalado
            echo "COD_AnD000000-12" >> "$LOGFILE"
            if ! dpkg -l | grep -qw dialog; then
                pkg install dialog -y > /dev/null 2>&1
            fi
            ((current_step++))
            update_progress "$current_step" "$total_steps"; sleep 0.1

            #13 Verifica se o tar está instalado
            echo "COD_AnD000000-13" >> "$LOGFILE"
            if ! dpkg -l | grep -qw tar; then
                pkg install tar -y > /dev/null 2>&1
            fi
            ((current_step++))
            update_progress "$current_step" "$total_steps"; sleep 0.1

            #14 Verifica se o curl está instalado
            echo "COD_AnD000000-14" >> "$LOGFILE"
            if ! dpkg -l | grep -qw curl; then
                pkg install curl -y > /dev/null 2>&1
            fi
            ((current_step++))
            update_progress "$current_step" "$total_steps"; sleep 0.1

            #15 Verifica se o unzip está instalado
            echo "COD_AnD000000-15" >> "$LOGFILE"
            if ! dpkg -l | grep -qw unzip; then
                pkg install unzip -y > /dev/null 2>&1
            fi
            ((current_step++))
            update_progress "$current_step" "$total_steps"; sleep 0.1

            #16 Verifica se o xz-utils está instalado
            echo "COD_AnD000000-16" >> "$LOGFILE"
            if ! dpkg -l | grep -qw xz-utils; then
                pkg install xz-utils -y > /dev/null 2>&1
            fi
            ((current_step++))
            update_progress "$current_step" "$total_steps"; sleep 0.1

            #17 Verifica se o debootstrap está instalado
            echo "COD_AnD000000-17" >> "$LOGFILE"
            if ! dpkg -l | grep -qw debootstrap; then
                pkg install debootstrap -y > /dev/null 2>&1
            fi
            ((current_step++))
            update_progress "$current_step" "$total_steps"; sleep 0.1

            #18 Verifica se o dbus está instalado
            echo "COD_AnD000000-18" >> "$LOGFILE"
            if ! dpkg -l | grep -qw dbus; then
                pkg install dbus -y > /dev/null 2>&1
            fi
            ((current_step++))
            update_progress "$current_step" "$total_steps"; sleep 0.1

            #19 Verifica se o pv está instalado
            echo "COD_AnD000000-19" >> "$LOGFILE"
            if ! dpkg -l | grep -qw pv; then
                pkg install pv -y > /dev/null 2>&1
            fi
            ((current_step++))
            update_progress "$current_step" "$total_steps"; sleep 0.1

            #20 Verifica e baixa global
            echo "COD_AnD000000-20" >> "$LOGFILE"
            if [ ! -f "$PREFIX/var/lib/andistro/lib/share/global" ]; then
                curl -s -o "$PREFIX/var/lib/andistro/lib/share/global" "${extralink}/config/global" >> "$LOGFILE" 2>&1
            fi
            ((current_step++))
            update_progress "$current_step" "$total_steps"; sleep 0.1

            #21 Verifica e atualiza o global_var_fun
            echo "COD_AnD000000-21" >> "$LOGFILE"
            curl -s -o "$PREFIX/var/lib/andistro/lib/share/global_var_fun.check" "${extralink}/config/global" >> "$LOGFILE" 2>&1

            if [ -f "$PREFIX/var/lib/andistro/lib/share/global" ] && [ -f "$PREFIX/var/lib/andistro/lib/share/global_var_fun.check" ]; then
                if ! cmp -s "$PREFIX/var/lib/andistro/lib/share/global" "$PREFIX/var/lib/andistro/lib/share/global_var_fun.check"; then
                    rm "$PREFIX/var/lib/andistro/lib/share/global"
                    mv "$PREFIX/var/lib/andistro/lib/share/global_var_fun.check" "$PREFIX/var/lib/andistro/lib/share/global"
                    chmod +x "$PREFIX/var/lib/andistro/lib/share/global"
                else
                    rm "$PREFIX/var/lib/andistro/lib/share/global_var_fun.check"
                fi
            fi
            ((current_step++))
            update_progress "$current_step" "$total_steps"; sleep 0.1

            #22 Verifica e baixa l10n_${locale}.sh
            echo "COD_AnD000000-22" >> "$LOGFILE"
            if [ ! -f "$PREFIX/var/lib/andistro/lib/share/locales/l10n_${system_icu_locale_code}.sh" ]; then
                curl -s -o "$PREFIX/var/lib/andistro/lib/share/locales/l10n_${system_icu_locale_code}.sh" "${extralink}/config/locale/l10n_${system_icu_locale_code}.sh" >> "$LOGFILE" 2>&1
            fi
            ((current_step++))
            update_progress "$current_step" "$total_steps"; sleep 0.1

            #23 Verifica e atualiza o l10n_${locale}.sh
            echo "COD_AnD000000-23" >> "$LOGFILE"
            curl -s -o "$PREFIX/var/lib/andistro/lib/share/locales/l10n_${system_icu_locale_code}.check" "${extralink}/config/locale/l10n_${system_icu_locale_code}.sh" >> "$LOGFILE" 2>&1

            if [ -f "$PREFIX/var/lib/andistro/lib/share/locale/l10n_${system_icu_locale_code}.sh" ] && [ -f "$PREFIX/var/lib/andistro/lib/share/locales/l10n_${system_icu_locale_code}.check" ]; then
                if ! cmp -s "$PREFIX/var/lib/andistro/lib/share/locales/l10n_${system_icu_locale_code}.sh" "$PREFIX/var/lib/andistro/lib/share/locales/l10n_${system_icu_locale_code}.check"; then
                    rm "$PREFIX/var/lib/andistro/lib/share/locales/l10n_${system_icu_locale_code}.sh"
                    mv "$PREFIX/var/lib/andistro/lib/share/locales/l10n_${system_icu_locale_code}.check" "$PREFIX/var/lib/andistro/lib/share/locales/l10n_${system_icu_locale_code}.sh"
                    chmod +x "$PREFIX/var/lib/andistro/lib/share/locales/l10n_${system_icu_locale_code}.sh"
                else
                    rm "$PREFIX/var/lib/andistro/lib/share/locales/l10n_${system_icu_locale_code}.check"
                fi
            fi
            ((current_step++))
            update_progress "$current_step" "$total_steps"; sleep 0.1

            #24 Verifica se o andistro está em $HOME
            echo "COD_AnD000000-24" >> "$LOGFILE"
            if [ -f "$HOME/andistro" ]; then
                mv "$HOME/andistro" "$PREFIX/bin/andistro"
                rm -rf "$HOME/andistro"
            fi
            chmod +x "$PREFIX/bin/andistro"
            ((current_step++))
            update_progress "$current_step" "$total_steps"; sleep 0.1

            #25 Verifica e atualiza o andistro
            echo "COD_AnD000000-25" >> "$LOGFILE"
            curl -s -o "$HOME/andistro.check" "${extralink}/andistro" >> "$LOGFILE" 2>&1

            if [ -f "$PREFIX/bin/andistro" ] && [ -f "$HOME/andistro.check" ]; then
                if ! cmp -s "$PREFIX/bin/andistro" "$HOME/andistro.check"; then
                    rm "$PREFIX/bin/andistro"
                    mv "$HOME/andistro.check" "$PREFIX/bin/andistro"
                    chmod +x "$PREFIX/bin/andistro"
                else
                    rm "$HOME/andistro.check"
                fi
            fi
            ((current_step++))
            update_progress "$current_step" "$total_steps"; sleep 0.1
            
            echo  # pular linha no fim
        }

        echo "COD_AnD000014" >> "$LOGFILE"
        chmod +x "$PREFIX/var/lib/andistro/lib/share/locales/l10n_${system_icu_locale_code}.sh"
        chmod +x "$PREFIX/var/lib/andistro/lib/share/global"
        source "$PREFIX/var/lib/andistro/lib/share/global"

        echo -e "$label_update_finish" | tee -a "$LOGFILE"
        exit 1
        ;;

    -i)
        # Descrição e instalação das distribuições
        echo "COD_AnD000015" >> "$LOGFILE"
        source "$PREFIX/var/lib/andistro/lib/share/global"
        if [ -z "$2" ]; then
            # Mostra a descrição
            echo "$distro_desc_line_1"
            echo ""
            echo "$distro_desc_line_2"
            echo "$distro_desc_line_3"
            echo " "
            echo "$distro_desc_line_8"
            echo "$distro_desc_line_10"
            echo " "
            echo "$distro_desc_line_13"
            echo "   debian"
            echo "   ubuntu"
            exit 1
        fi

        if [ "$2" == "debian" ]; then
            echo "COD_AnD000015-1" >> "$LOGFILE"
            # Instalação do Debian
            echo "$distro_wait" | tee -a "$LOGFILE" | tee -a "$LOGFILE"
            echo "COD_AnD000015-1.1" >> "$LOGFILE"
            andistro alerta-timezone 2>&1 | tee -a "$LOGFILE"
            echo "COD_AnD000015-1.2" >> "$LOGFILE"
            show_progress_dialog "wget" "${label_progress}" 1 -O "$PREFIX/var/lib/andistro/boot/install-debian.sh" "${extralink}/distros/debian.sh"
            chmod +x $PREFIX/var/lib/andistro/boot/install-debian.sh
            echo "COD_AnD000015-1.3" >> "$LOGFILE"
            bash $PREFIX/var/lib/andistro/boot/install-debian.sh
            rm -rf $PREFIX/var/lib/andistro/boot/install-debian.sh
        elif [ "$2" == "ubuntu" ]; then
            # Instalação do Ubuntu
            echo "$distro_wait"| tee -a "$LOGFILE"
            echo "COD_AnD000015-2.1" >> "$LOGFILE"
            andistro alerta-timezone 2>&1 | tee -a "$LOGFILE"
            echo "COD_AnD000015-2.2" >> "$LOGFILE"
            show_progress_dialog "wget" "${label_progress}" 1 -O "$PREFIX/var/lib/andistro/boot/install-ubuntu.sh" "${extralink}/distros/ubuntu.sh"
            chmod +x $PREFIX/var/lib/andistro/boot/install-ubuntu.sh
            echo "COD_AnD000015-2.3" >> "$LOGFILE"
            bash $PREFIX/var/lib/andistro/boot/install-ubuntu.sh
            rm -rf $PREFIX/var/lib/andistro/boot/install-ubuntu.sh
        else
            # Não reconhecido
            echo "Distribuição não reconhecida: $2" | tee -a "$LOGFILE"
            exit 1
        fi
        ;;
    -d)
        # Desinstalação das distribuições
        if [ -z "$2" ]; then
            # Mostra a descrição
            echo "COD_AnD000016" >> "$LOGFILE"
            echo "$distro_desc_line_1"
            echo ""
            echo "$distro_desc_line_4"
            echo "$distro_desc_line_5"
            echo " "
            echo "$distro_desc_line_8"
            echo "$distro_desc_line_11"
            echo " "
            echo "$distro_desc_line_13"
            echo "  total"
            echo "  debian"
            echo "  ubuntu"
            exit 1
        fi

        if [ "$2" == "total" ]; then
            # Desinstalação total
            echo "$distro_wait" | tee -a "$LOGFILE"
            echo "COD_AnD000016-1.1" >> "$LOGFILE"
            andistro -d debian 2>&1 | tee -a "$LOGFILE"
            echo "COD_AnD000016-1.2" >> "$LOGFILE"
            andistro -d ubuntu 2>&1 | tee -a "$LOGFILE"
            rm -rf $PREFIX/var/lib/andistro/
            rm -rf $PREFIX/bin/andistro
        elif [ "$2" == "debian" ]; then
            # Desinstalação do Debian
            echo "$distro_wait" | tee -a "$LOGFILE"
            echo "COD_AnD000016-2.1" >> "$LOGFILE"
            rm -rf $PREFIX/var/lib/andistro/boot/debian/
            rm -rf $PREFIX/var/lib/andistro/boot/debian/*
            rm -rf $PREFIX/var/lib/andistro/boot/start-debian*
            rm -rf $HOME/debian-stable
            rm -rf $HOME/debian-binds
            rm -rf $HOME/start-debian.sh
            rm -rf $HOME/start-distro.sh
            rm -rf $HOME/l10n*.sh
            rm -rf $HOME/global
            rm -rf $HOME/storage
            rm -rf $HOME/debian-stable
            rm -rf $HOME/debian-bookworm
            rm -rf $HOME/debian-bullseye
            rm -rf $PREFIX/bin/start-debian
            rm -rf /data/data/com.termux/files/usr/var/run/dbus/pid 
            rm -rf system_bus_socket
            rm -rf /sdcard/termux/andistro/debian
            rm -rf /sdcard/termux/andistro/boot/debian            
            echo "Desinstalação concluída!" | tee -a "$LOGFILE"
        elif [ "$2" == "ubuntu" ]; then
            # Desinstalação do Ubuntu
            echo "$distro_wait" | tee -a "$LOGFILE"
            echo "COD_AnD000016-2.1" >> "$LOGFILE"
            rm -rf $PREFIX/var/lib/andistro/boot/ubuntu/
            rm -rf $PREFIX/var/lib/andistro/boot/ubuntu/*
            rm -rf $PREFIX/var/lib/andistro/boot/start-ubuntu*
            rm -rf $HOME/ubuntu-noble
            rm -rf $HOME/ubuntu-noble.tar.xz
            rm -rf $HOME/ubuntu-fs
            rm -rf $HOME/ubuntu-binds
            rm -rf $HOME/start-ubuntu.sh
            rm -rf $PREFIX/var/lib/andistro/start-ubuntu
            rm -rf $HOME/start-distro.sh
            rm -rf $HOME/l10n*.sh
            rm -rf $HOME/global
            rm -rf $PREFIX/bin/start-ubuntu
            rm -rf /data/data/com.termux/files/usr/var/run/dbus/pid 
            rm -rf system_bus_socket
            rm -rf /sdcard/termux/andistro/boot/ubuntu
            echo "Desinstalação concluída!" | tee -a "$LOGFILE"
        else
            # Não reconhecido
            echo "Distribuição não reconhecida: $2"  | tee -a "$LOGFILE"
            exit 1
        fi
        ;;
    -s)
        # Descrição e inicialização das distribuições
        echo "COD_AnD000017" >> "$LOGFILE"
        if [ -z "$2" ]; then
            # Mostra a descrição
            echo "$distro_desc_line_1"
            echo ""
            echo "$distro_desc_line_6"
            echo "$distro_desc_line_7"
            echo " "
            echo "$distro_desc_line_8"
            echo "$distro_desc_line_12"
            echo " "
            echo "$distro_desc_line_13"
            echo "   debian"
            echo "   ubuntu"
            exit 1
        fi

        if [ "$2" == "debian" ]; then
            # Inicia o Debian
            echo "$distro_wait" | tee -a "$LOGFILE"
            echo "COD_AnD000017-1.1" >> "$LOGFILE"
            if [ -e "$PREFIX/var/lib/andistro/boot/start-debian" ];then
	            bash $PREFIX/var/lib/andistro/boot/start-debian
            else
                echo "$distro_command_not_found $1"  | tee -a "$LOGFILE"
                echo -e "$label_update_finish"  | tee -a "$LOGFILE"
            fi
            
        elif [ "$2" == "ubuntu" ]; then
            # Inicia o Ubuntu
            echo "$distro_wait" | tee -a "$LOGFILE"
            echo "COD_AnD000017-2.1" >> "$LOGFILE"
            if [ -e "$PREFIX/var/lib/andistro/boot/start-ubuntu" ];then
	            bash $PREFIX/var/lib/andistro/boot/start-ubuntu
            else
                echo "$distro_command_not_found $1" | tee -a "$LOGFILE"
                echo -e "$label_update_finish" | tee -a "$LOGFILE"
            fi  
        else
            # Não reconhecido
            echo "Distribuição não reconhecida: $2" | tee -a "$LOGFILE"
            exit 1
        fi
        ;;

        terminal)
            # Descrição na versão terminal
            echo "COD_AnD000018" >> "$LOGFILE"
            echo ""
            echo "$distro_desc_line_1"
            echo ""
            echo "$distro_desc_line_2"
            echo "$distro_desc_line_3"
            echo " "
            echo "$distro_desc_line_4"
            echo "$distro_desc_line_5"
            echo " "
            echo "$distro_desc_line_6"
            echo "$distro_desc_line_7"
            echo " "
            echo "$distro_desc_line_8"
            echo "$distro_desc_line_9"
            echo "$distro_desc_line_10"
            echo "$distro_desc_line_11"
            echo "$distro_desc_line_12"
            echo " "
            echo "$distro_desc_line_13"
            echo "   debian"
            echo "   ubuntu"
        ;;

        alerta-timezone)
            # Mostra o alerta de timezone detectado
            echo "COD_AnD000019" >> "$LOGFILE"
            {
                for i in {1..50}; do
                    sleep 0.1
                    echo $((i * 2))
                done
            } | dialog --no-shadow --gauge "${label_distro_alert_timezone_desc} \n$label_distro_alert_timezone_detected $system_timezone\n\n$label_sleep_in_5s" 10 50 0
        ;;

        --set-edit)
            # Edita o código base do andistro
            echo "COD_AnD000020" >> "$LOGFILE"
            nano $PREFIX/bin/andistro
        ;;

    *)
        # Comando não reconhecido
        echo "$distro_command_not_found $1" | tee -a "$LOGFILE"
        echo "COD_AnD000021" >> "$LOGFILE"
        andistro terminal
        exit 1
        ;;
esac

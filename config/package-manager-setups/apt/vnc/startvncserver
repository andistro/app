#!/bin/bash
if ! dpkg -l | grep -qw dialog; then
    apt install dialog -y > /dev/null 2>&1
fi
stopvnc

source "/usr/local/bin/global_var_fun.sh"

export USER=$(whoami)
HEIGHT=0
WIDTH=0
CHOICE_HEIGHT=5
BACKTITLE="${label_vncserver_resolution_title}"
TITLE="startvncserver"
MENU="${label_vncserver_resolution_option}"
export PORT=1


OPTIONS=(1 "${label_vncserver_resolution_option_uwhd}"
         2 "${label_vncserver_resolution_option_qdhd}"
         3 "${label_vncserver_resolution_option_fhd}"
         4 "${label_vncserver_resolution_option_hd}"
         5 "${label_vncserver_resolution_option_custom}")

CHOICE=$(dialog --no-shadow --no-shadow --clear \
                --backtitle "$BACKTITLE" \
                --title "$TITLE" \
                --menu "$MENU" \
                $HEIGHT $WIDTH $CHOICE_HEIGHT \
                "${OPTIONS[@]}" \
                2>&1 >/dev/tty)

clear
case $CHOICE in
1)
echo "${label_vncserver_chose_resolution_uwhd}"
GEO="-geometry 2560x1080" vnc
;;
2)
echo "${label_vncserver_chose_resolution_qdhd}"
GEO="-geometry 2560x1440" vnc
;;
3)
echo "${label_vncserver_chose_resolution_fhd}"
GEO="-geometry 1920x1080" vnc
;;
4)
echo "${label_vncserver_chose_resolution_hd}"
GEO="-geometry 1280x720" vnc
;;
5)
set +H
while true; do
    dialog_msgbox="$label_vncserver_chose_resolution_custom\n$label_vncserver_chose_resolution_custom_desc\n$label_vncserver_chose_resolution_custom_desc_port\n$label_vncserver_chose_resolution_custom_alert\n$label_vncserver_chose_resolution_custom_alert_caption\n\n"
    mensagem_erro=""

    # Testa se não é a primeira vez (já tentou e falhou)
    if [[ -n "$tentou" ]]; then
        falta_msg=""
        [[ -z "$largura_default" || ! "$largura_default" =~ ^[0-9]+$ ]] && falta_msg="${falta_msg}${label_width} ${label_numbers_only}\n"
        [[ -z "$altura_default"  || ! "$altura_default"  =~ ^[0-9]+$ ]] && falta_msg="${falta_msg}${label_height} ${label_numbers_only}\n"
        [[ -z "$escala_default"  || ! "$escala_default"  =~ ^[0-9]+$ ]] && falta_msg="${falta_msg}${label_scale} ${label_numbers_only}\n"
        [[ -z "$porta_default"   || ! "$porta_default"   =~ ^[0-9]+$ ]] && falta_msg="${falta_msg}${label_port} ${label_numbers_only}\n"
        [[ -n "$falta_msg" ]] && mensagem_erro="${label_vncserver_chose_resolution_custom_alert_error}:\n$falta_msg"
    fi

    # Cabeçalho, variável ou mensagem de erro
    cabecalho="Configuração do VNC Server"
    if [[ -n "$mensagem_erro" ]]; then
        titulo="$dialog_msgbox\n----------------\n$mensagem_erro\n\n"
        else
            titulo="$dialog_msgbox"
    fi

    exec 3>&1
    result=$(dialog --no-shadow --ok-label "Confirmar" --backtitle "$cabecalho" \
        --form "$titulo" \
        24 68 4 \
        "Largura:"  1 1 "$largura_default"  1 20 10 0 \
        "Altura:"   2 1 "$altura_default"   2 20 10 0 \
        "Escala:"   3 1 "$escala_default"   3 20 10 0 \
        "Porta:"    4 1 "$porta_default"    4 20 10 0 \
        2>&1 1>&3)
    dialog_exit_status=$? # <-- Aqui captura o status
    exec 3>&-

    # Cancelar? Sai do loop e chama startvnc
    if [[ $dialog_exit_status -ne 0 || -z "$result" ]]; then
        set -H
        startvnc
        exit 0
    fi

    tentou=1

    largura_default="$(echo "$result" | sed -n 1p)"
    altura_default="$(echo "$result" | sed -n 2p)"
    escala_default="$(echo "$result" | sed -n 3p)"
    porta_default="$(echo "$result" | sed -n 4p)"

    # Validação
    if [[ "$largura_default" =~ ^[0-9]+$ ]] &&
        [[ "$altura_default"  =~ ^[0-9]+$ ]] &&
        [[ "$escala_default"  =~ ^[0-9]+$ ]] &&
        [[ "$porta_default"   =~ ^[0-9]+$ ]]; then
        break
    fi
done
set -H
echo "Resolução definida: ${largura_default}x${altura_default}, Escala: ${escala_default}, Porta: ${porta_default}"
GEO="-geometry ${largura_default}x${altura_default}" PORT=$porta_default vnc
xfconf-query -c xsettings -p /Gdk/WindowScalingFactor -s $escala_default
;;
esac

bash --login


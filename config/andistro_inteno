#!/bin/bash

#exec > >(tee -a "$LOGFILE") 2>&1
# Cores
CYAN='\033[1;36m'
WHITE='\033[1;37m'
NC='\033[0m' # Reset

source /usr/local/bin/global

if [ -z "$1" ]; then
    echo "Use o comando --system-info para exibir informações do sistema."
    exit 1
fi

case "$1" in
    --system-info)
            # Distro info
        if [ -f /etc/os-release ]; then
            . /etc/os-release
            DISTRO="$NAME"
            CODENAME="$VERSION_CODENAME"
            VERSION="$VERSION_ID"
            else
                DISTRO=$(lsb_release -si 2>/dev/null)
                CODENAME=$(lsb_release -sc 2>/dev/null)
                VERSION=$(lsb_release -sr 2>/dev/null)
        fi

        # Memória
        FILE_MEMINFO="/proc/meminfo"  # OU: FILE_MEMINFO="$folder/proc/meminfo"

        MEMTOTAL=$(grep MemTotal $FILE_MEMINFO | awk '{print $2}')
        MEMAVAILABLE=$(grep MemAvailable $FILE_MEMINFO | awk '{print $2}')

        MEMTOTAL_MB=$((MEMTOTAL / 1024))
        MEMAVAILABLE_MB=$((MEMAVAILABLE / 1024))
        MEMUSED_MB=$((MEMTOTAL_MB - MEMAVAILABLE_MB))

        # Interface gráfica
        INTERFACE="Desconhecida"
        if grep -qi startxfce4 "$HOME/.vnc/xstartup"; then
            INTERFACE="XFCE"
            elif grep -qi startkde "$HOME/.vnc/xstartup"; then
                INTERFACE="KDE"
            elif grep -qi gnome-session "$HOME/.vnc/xstartup"; then
                INTERFACE="GNOME"
            # Adicione outros ambientes gráficos conforme necessário
        fi

        # Resolução de tela (funciona com xrandr)
        if command -v xrandr >/dev/null 2>&1; then
            RESOLUCAO=$(xrandr | grep '*' | head -n1 | awk '{print $1}')
            else
                RESOLUCAO="Indisponível"
        fi

        # Escala (DPI)
        ESCALA=$(xfconf-query -c xsettings -p /Gdk/WindowScalingFactor 2>/dev/null)

        # Tema GTK atual (GSettings, só para ambientes GNOME ou compatível)
        THEME=$(xfconf-query -c xsettings -p /Net/ThemeName 2>/dev/null)
        [ -z "$THEME" ] && THEME="Indisponível"

        # Impressão das informações
        echo -e "${CYAN}Nome da Distro:${NC}    ${WHITE}${DISTRO}${NC}"
        echo -e "${CYAN}Codinome:${NC}          ${WHITE}${CODENAME}${NC}"
        echo -e "${CYAN}Versão:${NC}            ${WHITE}${VERSION}${NC}"
        echo -e "${CYAN}Memória Uso/Total:${NC} ${WHITE}${MEMUSED_MB}MB / ${MEMTOTAL_MB}MB${NC}"
        echo -e "${CYAN}Interface gráfica:${NC} ${WHITE}${INTERFACE}${NC}"
        echo -e "${CYAN}Resolução:${NC}         ${WHITE}${RESOLUCAO}${NC}"
        echo -e "${CYAN}Escala:${NC}            ${WHITE}${ESCALA}${NC}"
        echo -e "${CYAN}Tema:${NC}              ${WHITE}${THEME}${NC}"
        exit 0
        ;;
    -u)
        echo -e "\n$distro_wait"
        update_progress() {
            current_step=$1
            total_steps=$2

            percent=$((current_step * 100 / total_steps))
            bar_length=30
            filled_length=$((percent * bar_length / 100))
            empty_length=$((bar_length - filled_length))

            filled_bar=$(printf "%${filled_length}s" | tr " " "=")
            empty_bar=$(printf "%${empty_length}s" | tr " " " ")

            printf "\r[%s%s] %3d%%" "$filled_bar" "$empty_bar" "$percent"
        }

        total_steps=15  # Número total de etapas que você quer monitorar
        current_step=0

        #1 Atualiza os repositórios
        sudo apt update > /dev/null 2>&1
        ((current_step++))
        update_progress "$current_step" "$total_steps"; sleep 0.1

        #5 Atualiza os pacotes
        sudo apt upgrade -y > /dev/null 2>&1
        ((current_step++))
        update_progress "$current_step" "$total_steps"; sleep 0.1

        #10 Verifica se o pulseaudio está instalado
        if ! dpkg -l | grep -qw pulseaudio; then
            pkg install pulseaudio -y > /dev/null 2>&1
        fi
        ((current_step++))
        update_progress "$current_step" "$total_steps"; sleep 0.1

        #11 Verifica se o wget está instalado
        if ! dpkg -l | grep -qw wget; then
            pkg install wget -y > /dev/null 2>&1
        fi
        ((current_step++))
        update_progress "$current_step" "$total_steps"; sleep 0.1

        #12 Verifica se o dialog está instalado
        if ! dpkg -l | grep -qw dialog; then
            pkg install dialog -y > /dev/null 2>&1
        fi
        ((current_step++))
        update_progress "$current_step" "$total_steps"; sleep 0.1

        #13 Verifica se o tar está instalado
        if ! dpkg -l | grep -qw tar; then
            pkg install tar -y > /dev/null 2>&1
        fi
        ((current_step++))
        update_progress "$current_step" "$total_steps"; sleep 0.1

        #14 Verifica se o curl está instalado
        if ! dpkg -l | grep -qw curl; then
        pkg install curl -y > /dev/null 2>&1
        fi
        ((current_step++))
        update_progress "$current_step" "$total_steps"; sleep 0.1

        #15 Verifica se o unzip está instalado
        if ! dpkg -l | grep -qw unzip; then
            pkg install unzip -y > /dev/null 2>&1
        fi
        ((current_step++))
        update_progress "$current_step" "$total_steps"; sleep 0.1

        #16 Verifica se o xz-utils está instalado
        if ! dpkg -l | grep -qw xz-utils; then
            pkg install xz-utils -y > /dev/null 2>&1
        fi
        ((current_step++))
        update_progress "$current_step" "$total_steps"; sleep 0.1

        #20 Verifica e baixa global
        if [ ! -f "/usr/local/bin/global" ]; then
            curl -s -o "/usr/local/bin/global" "${extralink}/config/global" > /dev/null 2>&1
        fi
        ((current_step++))
        update_progress "$current_step" "$total_steps"; sleep 0.1

        #21 Verifica e atualiza o global
        curl -s -o "/usr/local/bin/global.check" "${extralink}/config/global" 2>&1

        if [ -f "/usr/local/bin/global" ] && [ -f "/usr/local/bin/global.check" ]; then
            if ! cmp -s "/usr/local/bin/global" "/usr/local/bin/global.check"; then
                rm "/usr/local/bin/global"
                mv "/usr/local/bin/global.check" "/usr/local/bin/global"
                chmod +x "/usr/local/bin/global"
            else
                rm "/usr/local/bin/global.check"
            fi
        fi
        ((current_step++))
        update_progress "$current_step" "$total_steps"; sleep 0.1

        #22 Verifica e baixa l10n_${locale}.sh
        if [ ! -f "/usr/local/bin/locales/l10n_${system_icu_locale_code}.sh" ]; then
            curl -s -o "/usr/local/bin/locales/l10n_${system_icu_locale_code}.sh" "${extralink}/config/locale/l10n_${system_icu_locale_code}.sh" > /dev/null 2>&1
        fi
        ((current_step++))
        update_progress "$current_step" "$total_steps"; sleep 0.1

        #23 Verifica e atualiza o l10n_${locale}.sh
        curl -s -o "$PREFIX/var/lib/andistro/lib/share/locales/l10n_${system_icu_locale_code}.check" "${extralink}/config/locale/l10n_${system_icu_locale_code}.sh" 2>&1
                
        if [ -f "/usr/local/bin/locales/l10n_${system_icu_locale_code}.sh" ] && [ -f "$PREFIX/var/lib/andistro/lib/share/locales/l10n_${system_icu_locale_code}.check" ]; then
            if ! cmp -s "/usr/local/bin/locales/l10n_${system_icu_locale_code}.sh" "$PREFIX/var/lib/andistro/lib/share/locales/l10n_${system_icu_locale_code}.check"; then
                rm "/usr/local/bin/locales/l10n_${system_icu_locale_code}.sh"
                mv "$PREFIX/var/lib/andistro/lib/share/locales/l10n_${system_icu_locale_code}.check" "/usr/local/bin/locales/l10n_${system_icu_locale_code}.sh"
                chmod +x "/usr/local/bin/locales/l10n_${system_icu_locale_code}.sh"
            else
                rm "$PREFIX/var/lib/andistro/lib/share/locales/l10n_${system_icu_locale_code}.check"
            fi
        fi
        ((current_step++))
        update_progress "$current_step" "$total_steps"; sleep 0.1

        #24 Verifica se o andistro está em $HOME
        if [ -f "$HOME/andistro" ]; then
            mv "$HOME/andistro" "/usr/local/bin/andistro"
            chmod +x "/usr/local/bin/andistro"
            rm -rf "$HOME/andistro"
        fi
        chmod +x "/usr/local/bin/andistro"
        ((current_step++))
        update_progress "$current_step" "$total_steps"; sleep 0.1

        # 25 Verifica e atualiza o andistro
        curl -s -o "/usr/local/bin/andistro.check" "${extralink}/config/andistro_interno" 2>&1

        if [ -f "/usr/local/bin/andistro" ] && [ -f "/usr/local/bin/andistro.check" ]; then
            if ! cmp -s "/usr/local/bin/andistro" "/usr/local/bin/andistro.check"; then
                rm "/usr/local/bin/andistro"
                mv "/usr/local/bin/andistro.check" "/usr/local/bin/andistro"
                chmod +x "/usr/local/bin/andistro"
            else
                rm "/usr/local/bin/andistro.check"
            fi
        fi
        ((current_step++))
        update_progress "$current_step" "$total_steps"; sleep 0.1
        
        echo  # pular linha no fim
        ;;


    -server)
        if [ -z "$2" ]; then
            # Não foi passado subcomando, comportamento padrão
            echo "Ecolha uma opção"
        else
            case "$2" in
                start)
                    startvnc
                    ;;
                stop)
                    stopvnc
                    ;;
                password)
                    vncpasswd
                    ;;
                *)
                    echo "Subcomando desconhecido: $2"
                    ;;
            esac
        fi
        ;;
    *)
        echo "$distro_command_not_found $1"
        andistro
        exit 1
    ;;
esac
#!/data/data/com.termux/files/usr/bin/bash

# Variável com o link do script no GitHub

# Teste
extralink="https://raw.githubusercontent.com/distribuicoeslinuxnoandroid/app/main"
script_url="${extralink}/desinstalar"

# Nome do arquivo local
local_script="$PREFIX/bin/desinstalar"

# Função para verificar e atualizar o script
update_script() {
    echo "Verificando atualizações do script..."

    # Baixa a versão mais recente do script do GitHub
    wget -q "$script_url" -O "${local_script}.new"

    # Verifica se o download foi bem-sucedido
    if [ $? -eq 0 ]; then
        # Compara a versão local com a versão do GitHub
        diff "$local_script" "${local_script}.new" > /dev/null 2>&1
        if [ $? -ne 0 ]; then
            echo "Atualização disponível. Substituindo o script local."
            # Substitui o script local pelo novo
            mv "${local_script}.new" "$local_script"
            chmod +x "$local_script"
            echo "Script atualizado com sucesso!"
        else
            echo "Script já está na versão mais recente."
            rm "${local_script}.new"  # Remove o arquivo temporário
        fi
    else
        echo "Falha ao baixar a atualização do script."
    fi
}

# Verifica se o arquivo "instalar" existe em $PREFIX/bin/
if [ ! -f "$local_script" ]; then
    echo "O script 'desinstalar' não foi encontrado em $PREFIX/bin/. Movendo de $HOME..."
    if [ -f "$HOME/desinstalar" ]; then
        mv "$HOME/desinstalar" "$local_script"
        chmod +x "$local_script"
        rm -rf $HOME/desinstalar
    else
        echo "Arquivo 'desinstalar' não encontrado em $HOME. Nenhuma ação tomada."
    fi
else
    # Se o arquivo já existe, verifica se ele precisa ser atualizado
    update_script
fi

#=============================================================================================
#=============================================================================================


# Verifica os argumentos passados ao script
if [ "$1" == "debian" ]; then
    # Executa a sequência de comandos para Debian
    echo -e "Desinstalando o Debian\n
    Aguarde..."
    rm -rf $HOME/debian-stable
    rm -rf $HOME/debian-binds
    rm -rf $HOME/start-debian.sh
    rm -rf $HOME/start-distro.sh
    rm -rf $HOME/l10n*.sh
    rm -rf $HOME/fixed_variables.sh
    rm -rf $HOME/storage
    rm -rf $HOME/debian-stable
    rm -rf $PREFIX/bin/start-debian
    rm -rf /data/data/com.termux/files/usr/var/run/dbus/pid 
    rm -rf system_bus_socket
    echo "Desisntalação concluída. Para reinstalar, terá que refazer os passo iniciais de instalação"

elif [ "$1" == "ubuntu" ]; then
    # Executa a sequência de comandos para Ubuntu
    echo -e "Desinstalando o Ubuntu...\nAguarde..."
    rm -rf $HOME/ubuntu-fs
    rm -rf $HOME/ubuntu-binds
    rm -rf $HOME/start-ubuntu.sh
    rm -rf $PREFIX/bin/start-ubuntu
    rm -rf /data/data/com.termux/files/usr/var/run/dbus/pid 
    rm -rf system_bus_socket
    echo "Desisntalação concluída. Para reinstalar, terá que refazer os passo iniciais de instalação"
    
elif [ -z "$1" ]; then
    # Caso nenhum argumento seja passado, exibe a mensagem de instrução
    echo -e "Digite o comando 'desinstalar' seguido do nome da distribuição.\n
    Exemplo: desinstalar <NOME_DA_DISTRIBUIÇÃO> \n\n
    Comandos:\n
    debian:      desinstala o sistema Debian.\n
    ubuntu:      desinstala o sistema Ubuntu."
else
    # Caso um argumento desconhecido seja passado
    echo "Distribuição não reconhecida: $1"
fi

#!/data/data/com.termux/files/usr/bin/bash

# if [ ! -d "$PREFIX/var/lib/andistro/" ];then
# 	mkdir -p "$PREFIX/var/lib/andistro/"
# 	mkdir -p "$PREFIX/var/lib/andistro/lib/share/"
# 	mkdir -p "$PREFIX/var/lib/andistro/lib/share/locales/"
# 	mkdir -p "$PREFIX/var/lib/andistro/boot/"
# 	mkdir -p "$PREFIX/var/lib/andistro/boot/.config/"
# 	mkdir -p "$PREFIX/var/lib/andistro/boot/.config/debian-based/"
# 	mkdir -p "$PREFIX/var/lib/andistro/boot/.config/debian-based/bin/"
#     mkdir -p "$PREFIX/var/lib/andistro/boot/.config/debian-based/environment/"
# 	mkdir -p "$PREFIX/var/lib/andistro/boot/.config/debian-based/locale_setup/"
# 	mkdir -p "$PREFIX/var/lib/andistro/wallpapers/"
# fi

update_progress() {
    current_step=$1
    total_steps=$2

    percent=$((current_step * 100 / total_steps))
    bar_length=30
    filled_length=$((percent * bar_length / 100))
    empty_length=$((bar_length - filled_length))

    filled_bar=$(printf "%${filled_length}s" | tr " " "=")
    empty_bar=$(printf "%${empty_length}s" | tr " " " ")

    printf "\r[%s%s] %3d%%" "$filled_bar" "$empty_bar" "$percent"
}

total_steps=25  # Número total de etapas que você quer monitorar
current_step=0

{
    #1 Atualiza os repositórios
    sleep 1
    ((current_step++))
    update_progress "$current_step" "$total_steps"; sleep 0.1

    #2 Atualiza os repositórios
    pkg update > /dev/null 2>&1
    ((current_step++))
    update_progress "$current_step" "$total_steps"; sleep 0.1

    #3 Instala o bash
    pkg install --option=Dpkg::Options::="--force-confold" bash -y > /dev/null 2>&1
    ((current_step++))
    update_progress "$current_step" "$total_steps"; sleep 0.1

    #4 Instala o openssl
    pkg install --option=Dpkg::Options::="--force-confold" openssl -y > /dev/null 2>&1
    ((current_step++))
    update_progress "$current_step" "$total_steps"; sleep 0.1

    #5 Instala o apt
    pkg install --option=Dpkg::Options::="--force-confold" apt -y > /dev/null 2>&1
    ((current_step++))
    update_progress "$current_step" "$total_steps"; sleep 0.1

    #6 Atualiza os pacotes
    pkg upgrade -y > /dev/null 2>&1
    ((current_step++))
    update_progress "$current_step" "$total_steps"; sleep 0.1

    #7 Verifica se o termux-exec está instalado
    if ! dpkg -l | grep -qw termux-exec; then
        pkg install termux-exec -y > /dev/null 2>&1
    fi
    ((current_step++))
    update_progress "$current_step" "$total_steps"; sleep 0.1

    #8 Verifica se o proot está instalado
    if ! dpkg -l | grep -qw proot; then
        pkg install proot -y > /dev/null 2>&1
    fi
    ((current_step++))
    update_progress "$current_step" "$total_steps"; sleep 0.1

    #9 Verifica se o x11-repo está instalado
    if ! dpkg -l | grep -qw x11-repo; then
        pkg install x11-repo -y > /dev/null 2>&1
    fi
    ((current_step++))
    update_progress "$current_step" "$total_steps"; sleep 0.1

    #10 Verifica se o termux-x11-nightly está instalado
    if ! dpkg -l | grep -qw termux-x11-nightly; then
        pkg install termux-x11-nightly -y > /dev/null 2>&1
    fi
    ((current_step++))
    update_progress "$current_step" "$total_steps"; sleep 0.1

    #11 Verifica se o pulseaudio está instalado
    if ! dpkg -l | grep -qw pulseaudio; then
        pkg install pulseaudio -y > /dev/null 2>&1
    fi
    ((current_step++))
    update_progress "$current_step" "$total_steps"; sleep 0.1

    #12 Verifica se o wget está instalado
    if ! dpkg -l | grep -qw wget; then
        pkg install wget -y > /dev/null 2>&1
    fi
    ((current_step++))
    update_progress "$current_step" "$total_steps"; sleep 0.1

    #13 Verifica se o dialog está instalado
    if ! dpkg -l | grep -qw dialog; then
        pkg install dialog -y > /dev/null 2>&1
    fi
    ((current_step++))
    update_progress "$current_step" "$total_steps"; sleep 0.1

    #14 Verifica se o tar está instalado
    if ! dpkg -l | grep -qw tar; then
        pkg install tar -y > /dev/null 2>&1
    fi
    ((current_step++))
    update_progress "$current_step" "$total_steps"; sleep 0.1

    #15 Verifica se o curl está instalado
    if ! dpkg -l | grep -qw curl; then
        pkg install curl -y > /dev/null 2>&1
    fi
    ((current_step++))
    update_progress "$current_step" "$total_steps"; sleep 0.1

    #16 Verifica se o unzip está instalado
    if ! dpkg -l | grep -qw unzip; then
        pkg install unzip -y > /dev/null 2>&1
    fi
    ((current_step++))
    update_progress "$current_step" "$total_steps"; sleep 0.1

    #17 Verifica se o xz-utils está instalado
    if ! dpkg -l | grep -qw xz-utils; then
        pkg install xz-utils -y > /dev/null 2>&1
    fi
    ((current_step++))
    update_progress "$current_step" "$total_steps"; sleep 0.1

    #18 Verifica se o debootstrap está instalado
    if ! dpkg -l | grep -qw debootstrap; then
        pkg install debootstrap -y > /dev/null 2>&1
    fi
    ((current_step++))
    update_progress "$current_step" "$total_steps"; sleep 0.1

    #19 Verifica se o dbus está instalado
    if ! dpkg -l | grep -qw dbus; then
        pkg install dbus -y > /dev/null 2>&1
    fi
    ((current_step++))
    update_progress "$current_step" "$total_steps"; sleep 0.1

    #20 Verifica se o pv está instalado
    if ! dpkg -l | grep -qw pv; then
        pkg install pv -y > /dev/null 2>&1
    fi
    ((current_step++))
    update_progress "$current_step" "$total_steps"; sleep 0.1

    #21 Verifica se o git está instalado
    if ! dpkg -l | grep -qw git; then
        pkg install git -y > /dev/null 2>&1
    fi
    ((current_step++))
    update_progress "$current_step" "$total_steps"; sleep 0.1

    #22 Verifica se o inxi está instalado
    if ! dpkg -l | grep -qw inxi; then
        pkg install inxi -y > /dev/null 2>&1
    fi
    ((current_step++))
    update_progress "$current_step" "$total_steps"; sleep 0.1

    #23 Todo o pacote de instalação
    git clone -b alpha https://github.com/andistro/app.git app-andistro_setup  > /dev/null 2>&1
    ((current_step++))
    update_progress "$current_step" "$total_steps"; sleep 0.1

    #24 Extrai o pacote de instalação
    
    rm -rf $HOME/app-andistro_setup/.git > /dev/null 2>&1
    rm -rf $HOME/app-andistro_setup/setup > /dev/null 2>&1
    mv "$HOME/app-andistro_setup/termos.sh" "$HOME/termos.sh" > /dev/null 2>&1
    mv $HOME/app-andistro_setup/andistro $PREFIX/bin/andistro > /dev/null 2>&1
    mv $HOME/app-andistro_setup/ $PREFIX/var/lib/andistro/ > /dev/null 2>&1

    ((current_step++))
    update_progress "$current_step" "$total_steps"; sleep 0.1

    #25 Mover o Andistro
    find $PREFIX/var/lib/andistro/lib -type f -exec chmod +x {} \; 
    find $PREFIX/var/lib/andistro/boot -type f -exec chmod +x {} \;
    find $PREFIX/var/lib/andistro/boot/.config -type f -exec chmod +x {} \;
    chmod +x "$HOME/termos.sh" 2>&1
    chmod +x "$PREFIX/bin/andistro" 2>&1
    ((current_step++))
    update_progress "$current_step" "$total_steps"; sleep 0.1

    echo
}

#rm -rf "$HOME/app-andistro_setup"
#rm -rf andistro_setup.zip
#rm -rf "$HOME/andistro_setup"

bash "$HOME/termos.sh"

#rm -rf "$HOME/app-andistro_setup"
#rm -rf andistro_setup.zip

andistro --setup storage
chmod +x "$PREFIX/var/lib/andistro/lib/share/global"
source "$PREFIX/var/lib/andistro/lib/share/global"
echo -e "$label_update_finish"
